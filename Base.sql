SET FOREIGN_KEY_CHECKS=0;

CREATE OR REPLACE TABLE PERSONNE (
    idPers SERIAL PRIMARY KEY,
    nomPers VARCHAR(64),
    prenomPers VARCHAR(64),
    poids INT,
    taille INT,
    tel VARCHAR(16) unique,
    mail VARCHAR(128) unique
);

CREATE OR REPLACE TABLE ENCADRANT (
    idEnc SERIAL PRIMARY KEY,
    nbHeuresMax INT,
    FOREIGN KEY (idEnc) REFERENCES personne(idPers) ON DELETE CASCADE
);

CREATE OR REPLACE TABLE CLIENT (
    idCli SERIAL PRIMARY KEY,
    dateInscription DATE,
    FOREIGN KEY (idCli) REFERENCES personne(idPers) ON DELETE CASCADE
);

CREATE OR REPLACE TABLE COTISATION_CLIENT (
    idCli SERIAL,
    anneeCotisation YEAR,
    prix DECIMAL(6,2),
    PRIMARY KEY(idCli, anneeCotisation),
    FOREIGN KEY (idCli) REFERENCES CLIENT(idCli) ON DELETE CASCADE
);

CREATE OR REPLACE TABLE RACE (
    nomRace VARCHAR(32) PRIMARY KEY,
    description VARCHAR(512)
);

CREATE OR REPLACE TABLE PONEY (
    idPoney SERIAL PRIMARY KEY,
    nomPoney VARCHAR(32),
    poidsMax INT,
    tailleMin INT,
    nomRace VARCHAR(32),
    FOREIGN KEY (nomRace) REFERENCES RACE(nomRace) ON DELETE CASCADE
);

CREATE OR REPLACE TABLE SEANCE (
    idSeance SERIAL PRIMARY KEY,
    encadrantSeance BIGINT UNSIGNED,
    intitule VARCHAR(64),
    duree INT,
    jma DATE,
    heureDebut INT,
    FOREIGN KEY (encadrantSeance) REFERENCES ENCADRANT(idEnc) ON DELETE CASCADE
    CONSTRAINT seanceTropLongue CHECK (duree <= 2)
);

CREATE OR REPLACE TABLE PONEY_RESERVE (
    idSeance BIGINT UNSIGNED,
    idPoney BIGINT UNSIGNED,
    PRIMARY KEY (idSeance, idPoney),
    FOREIGN KEY (idSeance) REFERENCES SEANCE(idSeance) ON DELETE CASCADE,
    FOREIGN KEY (idPoney) REFERENCES PONEY(idPoney) ON DELETE CASCADE
);

CREATE OR REPLACE TABLE RESERVER (
    idSeance BIGINT UNSIGNED,
    idCli BIGINT UNSIGNED,
    PRIMARY KEY (idSeance, idCli),
    FOREIGN KEY (idSeance) REFERENCES SEANCE(idSeance) ON DELETE CASCADE,
    FOREIGN KEY (idCli) REFERENCES CLIENT(idCli) ON DELETE CASCADE
);

CREATE OR REPLACE TABLE COURS (
    idCours SERIAL PRIMARY KEY,
    nbPersonneMax INT,
    nomCours VARCHAR(64),
    niveau INT,
    FOREIGN KEY (niveau) REFERENCES NIVEAU(niveau) ON DELETE CASCADE

);

CREATE OR REPLACE TABLE NIVEAU (
    niveau INT PRIMARY KEY
);

CREATE OR REPLACE TABLE OBTENIR_LVL (
    idPers SERIAL,
    niveau INT,
    jma DATE, 
    PRIMARY KEY (idPers, niveau, jma),
    FOREIGN KEY (idPers) REFERENCES personne(idPers) ON DELETE CASCADE,
    FOREIGN KEY (niveau) REFERENCES niveau(niveau) ON DELETE CASCADE
);

CREATE OR REPLACE INDEX idx_nomPoney ON PONEY(nomPoney);
CREATE OR REPLACE INDEX idx_nomPers ON PERSONNE(nomPers);

SET FOREIGN_KEY_CHECKS=1;